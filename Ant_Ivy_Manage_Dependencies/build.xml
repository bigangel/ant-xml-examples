<project xmlns:ivy="antlib:org.apache.ivy.ant" 
    name="Ant_Ivy_Manage_Dependencies" default="main"
    basedir=".">
    <!-- we must have to declare the namespace for ivy as above -->
    <description>
        Ant_Ivy_Manage_Dependencies
    </description>
    
    <!-- part I, declare common properties for reuse in the future -->
    <property name="projectName" value="HelloWorld" />

    <!-- Java sources directory -->
    <property name="src.dir" location="src" />

    <!-- Java classes directory -->
    <property name="build.dir" location="bin" />

    <!-- Output, Jar -->
    <property name="dist.dir" location="dist" />
    
    <!-- define our Main Class -->
    <property name="main-class" value="com.insigma.HelloWorld" />
    
    <!-- define our lib directory to put libraries -->
    <property name="dist.lib.dir" location="dist/lib" />
    
    <!-- ivy start -->
    <!-- ivy to get dependencies and copy to project lib folder automatically -->
    <!--  we must to have to create a new file named ivy.xml for managing dependencies -->
    <target name="resolve" description="retrieve dependencies with ivy">
        <ivy:retrieve />
    </target>
    
    <!-- install ivy. download ivy and put it your .ant/lib/ directory -->
    <target name="ivy" description="Install ivy">
        <mkdir dir="${user.home}/.ant/lib" />
        <get dest="${user.home}/.ant/lib/ivy.jar"
            src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0-rc1/ivy-2.4.0-rc1.jar" />
    </target>

    <!-- define init task for initializing some directories -->
    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.dir}" />
    </target>
    
    <!-- use javac command to compile our java source code -->
    <target name="compile" depends="init" description="compile the source code ">
        <!-- Compile the java code from ${src.dir} into ${build.dir} -->
        <javac includeantruntime="false" srcdir="${src.dir}"
            destdir="${build.dir}" />
    </target>
    
    <!-- use java jar command to package our classes to a .JAR file -->
    <target name="dist" depends="compile" description="package, output to JAR">

        <!-- Create the distribution directory -->
        <mkdir dir="${dist.dir}" />

        <!-- Put everything in ${build} into the {$projectName}.jar file -->
        <!--  use our project name as the .JAR file's name -->
        <jar jarfile="${dist.dir}/${projectName}.jar"  basedir="${build.dir}">
            <manifest>
                <!-- create an executable Jar -->
                <!-- define our Main Class for launching -->
                <attribute name="Main-Class" value="${main-class}" />
            </manifest>
        </jar>
    </target>
    
    <!-- after done some target, we could clean up using this task -->
    <target name="clean" description="clean up">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
    </target>
    
    <!-- ant run: define run task to run .JAR file in the command line or in a terminal -->
    <path id="application" location="${dist.dir}/${projectName}.jar" />
    <target name="run" depends="dist">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="application" />
            </classpath>
        </java>
    </target>

    <!-- Default, run this. if you did't type ant in this command, it will be running -->
    <target name="main" depends="clean, compile, dist" />

</project>